name: Evaluate CI Matrix
description: Evaluate all packages, check cache status generate CI matrix and publish comment with the summary

inputs:
  is-initial:
    description: Is this the start of the CI workflow, or the end
    default: 'true'
    required: true
  cachix-cache:
    description: The name of the cachix cache to use
    required: true
  cachix-auth-token:
    description: Cachix auth token
    required: true
  trusted-public-keys:
    description: Trusted public keys
    required: true
  substituters:
    description: Substituters
    required: true
  precalc_matrix:
    description: Pre-calculated matrix
    required: true
  pr-comment-github-token:
    description: GitHub token used to post the PR comment
    required: true
  nix-github-token:
    description: GitHub token to add as access-token in nix.conf
    default: ''
    required: false

outputs:
  matrix:
    description: 'Generated Matrix'
    value: ${{ steps.print-matrix.outputs.matrix }}
  comment:
    description: 'Comment'
    value: ${{ steps.print-matrix.outputs.comment }}

runs:
  using: 'composite'
  steps:
    - name: Install Nix
      uses: metacraft-labs/nixos-modules/.github/install-nix@main
      with:
        cachix-cache: ${{ inputs.cachix-cache }}
        cachix-auth-token: ${{ inputs.cachix-auth-token }}
        trusted-public-keys: ${{ inputs.trusted-public-keys }}
        substituters: ${{ inputs.substituters }}
        nix-github-token: ${{ inputs.nix-github-token }}

    - name: Print CI Matrix
      id: print-matrix
      shell: bash
      env:
        IS_INITIAL: ${{ inputs.is-initial }}
        CACHIX_CACHE: ${{ inputs.cachix-cache }}
        CACHIX_AUTH_TOKEN: ${{ inputs.cachix-auth-token }}
        PRECALC_MATRIX: ${{ inputs.precalc_matrix }}
        MCL_BRANCH: ${{ github.repository == 'metacraft-labs/nixos-modules' && github.sha || 'main' }}
      run: nix run --accept-flake-config github:metacraft-labs/nixos-modules/${{ env.MCL_BRANCH }}#mcl print_table

    - name: Update GitHub Comment
      uses: marocchino/sticky-pull-request-comment@v2.9.0
      with:
        GITHUB_TOKEN: ${{ inputs.pr-comment-github-token }}
        recreate: true
        path: comment.md
