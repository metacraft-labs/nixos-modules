name: 'Update Nix Flake lockfile'

on:
  # Allow this workflow to be reused by other workflows:
  workflow_call:
    inputs:
      runner:
        description: 'JSON-encoded list of runner labels'
        default: '["self-hosted"]'
        required: false
        type: string
      flake-input:
        description: 'Parameter for determining which flake will get updated'
        default: ''
        required: false
        type: string
      sign-commits:
        description: 'Enable GPG commit signing'
        default: false
        required: false
        type: boolean

    secrets:
      NIX_GITHUB_TOKEN:
        description: GitHub token to add as access-token in nix.conf
        required: false
      NIX_GITLAB_TOKEN:
        description: GitLab token to add as access-token in nix.conf
        required: false
      CACHIX_AUTH_TOKEN:
        description: 'Cachix auth token'
        required: true
      CREATE_PR_APP_ID:
        description: ID of the GitHub App used for opening pull requests.
        required: true
      CREATE_PR_APP_PRIVATE_KEY:
        description: Private key of the GitHub App used for opening pull requests.
        required: true
      GIT_GPG_SIGNING_SECRET_KEY:
        description: GPG secret key used to sign commits
        required: false

    outputs:
      pr-url:
        description: 'Pull Request URL'
        value: ${{ jobs.main.outputs.pull-request-url }}
      pr-number:
        description: 'Pull Request Number'
        value: ${{ jobs.main.outputs.pull-request-number }}

jobs:
  main:
    runs-on: ${{ fromJSON(inputs.runner) }}
    outputs:
      pull-request-url: ${{ steps.create-pr.outputs.pull-request-url }}
      pull-request-number: ${{ steps.create-pr.outputs.pull-request-number }}

    steps:
      - uses: actions/checkout@v5

      - name: Install Nix
        uses: metacraft-labs/nixos-modules/.github/install-nix@main
        with:
          nix-github-token: ${{ secrets.NIX_GITHUB_TOKEN }}
          nix-gitlab-token: ${{ secrets.NIX_GITLAB_TOKEN }}
          nix-gitlab-domain: ${{ vars.NIX_GITLAB_DOMAIN }}
          cachix-auth-token: ${{ secrets.CACHIX_AUTH_TOKEN }}
          cachix-cache: ${{ vars.CACHIX_CACHE }}
          trusted-public-keys: ${{ vars.TRUSTED_PUBLIC_KEYS }}
          substituters: ${{ vars.SUBSTITUTERS }}

      - name: Configure Git credentials
        run: |
          git config --local user.name "${{ vars.GIT_USER_NAME }}"
          git config --local user.email "${{ vars.GIT_USER_EMAIL }}"
          git config --local commit.gpgsign ${{ inputs.sign-commits }}

      - name: Import GPG key with passphrase
        if: ${{ inputs.sign-commits }}
        env:
          GIT_GPG_SIGNING_SECRET_KEY: ${{ secrets.GIT_GPG_SIGNING_SECRET_KEY }}
        run: |
          echo "$GIT_GPG_SIGNING_SECRET_KEY" \
            | gpg --batch --yes \
                --pinentry-mode loopback \
                --import
          git config --local user.signingkey "${{ vars.GIT_GPG_SIGNING_KEY_ID }}"

      - name: View flake config
        run: nix config show

      - name: Run `nix flake update`
        id: update-lockfile
        run: |
          curl -fsSL --proto '=https' --tlsv1.2 \
            https://raw.githubusercontent.com/metacraft-labs/nixos-modules/main/scripts/commit_flake_update.bash \
            -o commit_flake_update.bash && \
          bash commit_flake_update.bash
        env:
          GITHUB_TOKEN: ${{ github.token }}
          FLAKE_INPUT: ${{ inputs.flake-input }}

      - uses: tibdex/github-app-token@v2.1.0
        id: generate-token
        with:
          app_id: ${{ secrets.CREATE_PR_APP_ID }}
          private_key: ${{ secrets.CREATE_PR_APP_PRIVATE_KEY }}

      - name: Create Pull Request
        id: create-pr
        if: ${{ hashFiles('commit_msg_body.txt') != '' }}
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ steps.generate-token.outputs.token }}
          title: ${{ inputs.flake-input == '' && 'Update Nix Flake lockfile' || format('Update {0} Flake input' , inputs.flake-input) }}
          body-path: commit_msg_body.txt
          branch: 'create-pull-request/update-flake-lockfile'
          delete-branch: true
          branch-suffix: timestamp
          add-paths: flake.lock
